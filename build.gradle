plugins {
    id 'java'
    id 'org.springframework.boot' version "${springBootVersion}"
    id 'io.spring.dependency-management' version '1.1.6'
}

allprojects {
    group = 'com.ecommerce'
    version = '0.0.1-SNAPSHOT'

    repositories {
        mavenCentral()
    }
}

ext {
    springCloudVersion = "${springCloudVersion}"
}

subprojects {
    apply plugin: 'java'
    apply plugin: 'org.springframework.boot'
    apply plugin: 'io.spring.dependency-management'

    java {
        sourceCompatibility = '21'
    }

    configurations {
        compileOnly {
            extendsFrom annotationProcessor
        }
    }

    dependencyManagement {
        imports {
            mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
        }
    }

    dependencies { // Minimal common dependencies
        compileOnly 'org.projectlombok:lombok'
        annotationProcessor 'org.projectlombok:lombok'
        testImplementation 'org.springframework.boot:spring-boot-starter-test'
    }
}

// Define reusable dependency sets as a method
ext {
    applyCommonDependencies = { dependencyHandler ->
        dependencyHandler.implementation 'org.springframework.cloud:spring-cloud-starter-config'
        dependencyHandler.implementation 'org.springframework.cloud:spring-cloud-starter-netflix-eureka-client'
    }
    applyTracingDependencies = { dependencyHandler ->
        dependencyHandler.implementation 'org.springframework.boot:spring-boot-starter-actuator'
        dependencyHandler.implementation 'io.micrometer:micrometer-tracing-bridge-brave'
        dependencyHandler.implementation 'io.zipkin.reporter2:zipkin-reporter-brave'
    }
    applySecurityDependencies = { dependencyHandler ->
        dependencyHandler.implementation 'org.springframework.boot:spring-boot-starter-security'
        dependencyHandler.implementation 'org.springframework.boot:spring-boot-starter-oauth2-resource-server'
    }
    applyOpenApiDependencies = { dependencyHandler ->
        dependencyHandler.implementation "org.springdoc:springdoc-openapi-starter-webmvc-ui:${springDocVersion}"
    }
}