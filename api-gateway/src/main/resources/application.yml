spring:
  application:
    name: api-gateway
  profiles:
    active: dev
  config:
    import: optional:configserver:${CONFIG_SERVER_URL:http://localhost:8885}
  main:
    web-application-type: reactive
  security:
    oauth2:
      resourceserver:
        jwt:
          issuer-uri: ${keycloak.realm.url} #tells Spring Security where to validate JWTs
      client:
        provider:
          keycloak:
            issuer-uri: ${keycloak.realm.url}
            user-name-attribute: preferred_username
        registration:
          ecommerce:
            provider: keycloak
            client-id: api-gateway-client
            client-secret: ${KEYCLOAK_CLIENT_SECRET:fB6qaEazuI3oZJYHB1lu91Py6FbKP1m6}
            authorization-grant-type: authorization_code
            redirect-uri: "{baseUrl}/login/oauth2/code/{registrationId}"
  data:
    redis:
      host: ${REDIS_HOST:localhost}
      port: ${REDIS_PORT:6379}
      password: ${REDIS_PASSWORD:redis_password}
  cloud:
    gateway:
      server:
        webflux:
          default-filters:
            - TokenRelay= # Relays the OAuth2 token to downstream services
          globalcors:
            cors-configurations: #Enables Swagger UI and Keycloak
              '[/**]':
                allowedOrigins: "${CORS_ALLOWED_ORIGINS:http://localhost:9090}"
                allowedMethods: [ GET, POST, PUT, DELETE, OPTIONS ]
                allowedHeaders: "*"
                allowCredentials: true
          routes:
            - id: PRODUCT-SERVICE
              uri: lb://PRODUCT-SERVICE
              predicates:
                - Path=/products/**
              filters:
                - name: RequestRateLimitFilter
                  args:
                    key-resolver: "#{@userOrIpKeyResolver}"
                    redis-rate-limiter:
                      replenishRate: 1
                      burstCapacity: 2

            - id: ORDER-SERVICE
              uri: lb://ORDER-SERVICE
              predicates:
                - Path=/orders/**
              filters:
                - name: RequestRateLimitFilter
                  args:
                    key-resolver: "#{@userOrIpKeyResolver}"
                    redis-rate-limiter:
                      replenishRate: 1
                      burstCapacity: 2

            - id: USER-SERVICE
              uri: lb://USER-SERVICE
              predicates:
                - Path=/users/**
              filters:
                - name: RequestRateLimitFilter
                  args:
                    key-resolver: "#{@hostAddressKeyResolver}"
                    redis-rate-limiter:
                      replenishRate: 1  # Tokens added per second
                      burstCapacity: 3  # Max burst of tokens allowed

server:
  port: 8090

# Springdoc OpenAPI and Swagger UI configuration
springdoc:
  api-docs:
    enabled: true
  swagger-ui:
    enabled: true
    path: /swagger-ui.html
    config-url: /v3/api-docs/swagger-config
    urls:
      - name: API Gateway Service
        url: /v3/api-docs
      - name: Order Service
        url: /orders/v3/api-docs
      - name: Product Service
        url: /products/v3/api-docs
      - name: User Service
        url: /users/v3/api-docs