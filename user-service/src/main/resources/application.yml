spring:
  application:
    name: user-service
  profiles:
    active: dev
  config:
    import: optional:configserver:${CONFIG_SERVER_URL:http://localhost:8885}
  security:
    oauth2:
      resourceserver:
        jwt:
          issuer-uri: ${keycloak.realm.url}

server:
  port: 8082

keycloak:
  realm: ecommerce #Specifies the realm in Keycloak that the application will use for authentication and authorization.
  auth-server-url: ${KEYCLOAK_SERVER_URL:http://localhost:9090}
  resource: api-gateway-client #Sets the client ID
  client-key-password: fB6qaEazuI3oZJYHB1lu91Py6FbKP1m6
  bearer-only: true #It will only accept bearer tokens for authentication and will not perform a redirect to the login page.
  credentials:
    provider: secret
  principal-attribute: preferred_username # Configures what principal.getName() will return
  use-resource-role-mappings: true #The application will obtain roles from the Keycloak client configuration instead of user-level role mappings.

# Logging configuration to suppress unnecessary warnings
logging:
  level:
    org.springframework.web.servlet.handler.HandlerMappingIntrospector: ERROR

permit-urls:
  swagger:
    /users/v3/api-docs/**,
    /users/swagger-ui/**,
    /users/swagger-ui.html,
    /favicon.ico
  users:
    /users/signup,
    /users/login

springdoc:
  base-path: /users
  api-docs:
    enabled: true
    path: ${springdoc.base-path}/v3/api-docs
  swagger-ui:
    enabled: true
    path: ${springdoc.base-path}/swagger-ui.html

resilience4j.circuitbreaker:
  instances:
    keycloak:
      slidingWindowSize: 10
      failureRateThreshold: 50
      waitDurationInOpenState: 10000
      permittedNumberOfCallsInHalfOpenState: 3